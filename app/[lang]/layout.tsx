import type { Metadata } from 'next';
import { Inter, Rubik } from 'next/font/google';

import { cn } from '@/lib/utils';
import { Locale, i18n } from '@/i18n.config';
import { ModeToggle } from '@/components/mode-toggle';
import { ThemeProvider } from '@/providers/theme-provider';

import './globals.css';

const inter = Inter({ subsets: ['latin'] });
const rubik = Rubik({ subsets: ['arabic'] });

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app'
};

export const generateStaticParams = async () => {
  return i18n.locales.map(locale => ({ lang: locale }));
};

type TRootLayout = {
  children: React.ReactNode;
  params: { lang: Locale };
};

const RootLayout = ({ children, params }: TRootLayout) => {
  return (
    <html
      lang={params.lang}
      suppressHydrationWarning
      dir={params.lang === 'en' ? 'ltr' : 'rtl'}
    >
      <body
        suppressHydrationWarning
        className={cn(
          'min-h-screen bg-background antialiased',
          params.lang === 'en' ? inter.className : rubik.className
        )}
      >
        <ThemeProvider
          enableSystem
          attribute="class"
          defaultTheme="dark"
          disableTransitionOnChange
        >
          {children}
          <ModeToggle lang={params.lang} />
        </ThemeProvider>
      </body>
    </html>
  );
};

export default RootLayout;
